-- ComputerCraft Scripts (C) 2015 Peter "SaberUK" Powell

-- Tries to move the turtle in the specified direction by
-- [count] blocks. If the movement fails then execution is
-- terminated.
function forceMove(count, functor)
	for _ = 1, count do
		forceRefuel(1)
		if not functor() then
			error("The turtle is unable to move!")
		end
	end
end

-- Tries to refuel the turtle from the inventory. If no fuel
-- is available then execution is terminated.
function forceRefuel(count)
	if not isFuelEmpty() then
		return
	end
	for slot = 16, 1, -1 do
		turtle.select(slot)
		if turtle.refuel(count) then
			return
		end
	end
	error("The turtle has run out of fuel!")
end

function isFuelEmpty()
	local currentLevel = turtle.getFuelLevel()
	return currentLevel ~= "unlimited" and currentLevel < 1
end

-- Rotates the turtle so that it is facing in the opposite
-- direction.
function turnAround()
	turtle.turnRight()
	turtle.turnRight()
end

-- Tries to move the turtle in the specified direction by
-- [count] blocks. If the movement fails then it waits for
-- an increasingly exponential amount of time and tries
-- again.
function waitMove(count, functor)
	for _ = 1, count do
		local waitTime = 1
		while true do
			waitRefuel(1)
			if functor() then
				break
			end
			print("Unable to move; retrying in " .. waitTime .. " seconds.")
			os.sleep(waitTime)
			waitTime = waitTime * 2
		end
	end
end

-- Tries to refuel the turtle from the inventory. If no fuel
-- is available it waits for an increasingly exponential
-- amount of time and tries again.
function waitRefuel(count)
	if not isFuelEmpty() then
		return
	end
	local waitTime = 1
	while true do
		for slot = 16, 1, -1 do
			turtle.select(slot)
			if turtle.refuel(count) then
				return
			end
		end
		print("Unable to refuel; retrying in " .. waitTime .. " seconds.")
		os.sleep(waitTime)
		waitTime = waitTime * 2
	end
end

-- Searches the turtle's inventory for an item by block name
-- and optionally a damage value.
function searchInventory(name, damage)
	for slot = 16, 1, -1 do
		if searchInventorySlot(slot, name, damage) then
			return slot
		end
	end
end

-- Searches the specified slot of the turtle's inventory
-- for an item by block name and optionally a damage value.
function searchInventorySlot(slot, name, damage)
	local info = turtle.getItemDetail(slot)
	if info and info.name == name then
		if not damage or damage == info.damage then
			return true
		end
	end
	return false
end

-- Searches the specified side of a turtle for an item by
-- block name and optionally a metadata value.
function searchWorld(name, metadata, functor)
	local success, info = functor()
	if not success and not name then
		return true
	elseif info.name == name then
		if not metadata or metadata == info.metadata then
			return true
		end
	end
	return false
end
